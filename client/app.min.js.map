{"version":3,"sources":["app.js","services/authentication.service.js","directives/navigation/navigation.directive.js","controllers/fileupload/fileupload.controller.js","controllers/ipfs/ipfs.controller.js","controllers/list/list.controller.js","controllers/login/login.controller.js","controllers/navigation/navigation.controller.js","controllers/signup/signup.controller.js","controllers/details/details.controller.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["// changing the 'ngRoute' to 'ui.router'\r\n// inlcude the ui-router js in index.js\r\n// change the view to ui-view in index.html\r\n// inject ui.router below in angular dependent modules\r\n//  setup stateProvider and urlRouterProvider\r\n(function() {\r\n\r\n    angular.module('myApp', ['ui.router']);\r\n\r\n    angular\r\n        .module('myApp')\r\n        .config(['$stateProvider', '$urlRouterProvider', config])\r\n        .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n    // if we use ui.router we have to change $routeProvider to $stateProvider\r\n    // $locationProvider is used to remove #/ that Angular adds to route\r\n    function config($stateProvider, $urlRouterProvider) {\r\n\r\n        var signUpState = {\r\n            name: 'signup',\r\n            url: '/signup',\r\n            templateUrl: 'partials/signup.html',\r\n            controller: 'signUpCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n\r\n        var loginState = {\r\n            name: 'login',\r\n            url: '/login',\r\n            templateUrl: 'partials/login.html',\r\n            controller: 'loginCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n\r\n        var logoutState = {\r\n            name: 'logout',\r\n            url: '/logout',\r\n            templateUrl: 'partials/logout.html'\r\n                // controller: 'logoutCtrl',\r\n                // controllerAs: 'vm'\r\n        }\r\n\r\n        var ipfs = {\r\n            name: 'ipfs',\r\n            url: '/ipfs',\r\n            templateUrl: 'partials/ipfs.html',\r\n            controller: 'ipfsCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n\r\n        var artistList = {\r\n            name: 'artistList',\r\n            // dont define URL if you need to pass state params\r\n            url: '/list',\r\n            templateUrl: 'partials/list.html',\r\n            controller: 'listCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n\r\n        var fileupload = {\r\n            name: 'fileupload',\r\n            url: '/mulltiupload',\r\n            templateUrl: 'partials/fileupload.html',\r\n            controller: 'fileCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n\r\n        var artistdetail = {\r\n            name: 'artistdetail',\r\n            url: '/details/:itemId',\r\n            templateUrl: 'partials/details.html',\r\n            controller: 'detailsCtrl',\r\n            controllerAs: 'vm'\r\n        }\r\n        $stateProvider\r\n            .state(loginState)\r\n            .state(signUpState)\r\n            .state(ipfs)\r\n            .state(artistList)\r\n            .state(artistdetail)\r\n            .state(logoutState)\r\n            .state(fileupload);\r\n        // default route\r\n        $urlRouterProvider.otherwise('/login');\r\n        // enable html5Mode to get rid of # appended in URL\r\n        // $locationProvider.html5Mode(true);\r\n    }\r\n\r\n    function run($rootScope, $location, authentication) {\r\n        $rootScope.$on('$locationChangeStart', function(event, nextRoute, currentRoute) {\r\n            var publicPages = ['/login', '/signup', '/logout'];\r\n            var restrictedPage = publicPages.indexOf($location.path()) === -1;\r\n            if (restrictedPage && !authentication.isLoggedIn()) {\r\n                $location.path('/login');\r\n            }\r\n        });\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    \"use strict\";\r\n    angular\r\n        .module('myApp')\r\n        .service('authentication', authentication);\r\n\r\n    authentication.$inject = ['$http', '$window'];\r\n\r\n    function authentication($http, $window) {\r\n\r\n\r\n        var saveToken = function(token) {\r\n            $window.localStorage['mean-token'] = token;\r\n        };\r\n\r\n        var getToken = function() {\r\n            return $window.localStorage['mean-token'];\r\n        };\r\n\r\n        var isLoggedIn = function() {\r\n            var token = getToken();\r\n            var payload;\r\n\r\n            if (token) {\r\n                payload = token.split('.')[1];\r\n                payload = $window.atob(payload);\r\n                payload = JSON.parse(payload);\r\n\r\n                return payload.exp > Date.now() / 1000;\r\n            } else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        var currentUser = function() {\r\n            if (isLoggedIn()) {\r\n                var token = getToken();\r\n                var payload = token.split('.')[1];\r\n                payload = $window.atob(payload);\r\n                payload = JSON.parse(payload);\r\n                return {\r\n                    email: payload.email,\r\n                    name: payload.name\r\n                };\r\n            }\r\n        };\r\n\r\n        var register = function(user) {\r\n            return $http.post('/user/register', user).success(function(data) {\r\n                saveToken(data.token);\r\n            });\r\n        };\r\n\r\n        var login = function(user) {\r\n            return $http.post('/user/login', user).success(function(data) {\r\n                saveToken(data.token);\r\n            }).\r\n            error(function(error, status) {\r\n                console.log(error);\r\n                console.log(status);\r\n            });\r\n        };\r\n\r\n        var logout = function() {\r\n            $window.localStorage.removeItem('mean-token');\r\n        };\r\n        var service = {\r\n            currentUser: currentUser,\r\n            saveToken: saveToken,\r\n            getToken: getToken,\r\n            isLoggedIn: isLoggedIn,\r\n            register: register,\r\n            login: login,\r\n            logout: logout\r\n        };\r\n\r\n        return service;\r\n\r\n    }\r\n\r\n\r\n})();\r\n","(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .directive('navigation', navigation);\r\n\r\n    function navigation() {\r\n        return {\r\n            restrict: 'EA',\r\n            templateUrl: '../../partials/navigation.html',\r\n            controller: 'navigationCtrl as navvm'\r\n        };\r\n    }\r\n\r\n})();\r\n","// //inject angular file upload directives and services.\r\n// var app = angular.module('fileUpload', ['ngFileUpload']);\r\n\r\n(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .controller('fileCtrl', fileCtrl);\r\n\r\n    fileCtrl.$inject = ['$scope', 'Upload', '$timeout'];\r\n    // app.controller('MyCtrl', ['$scope', 'Upload', '$timeout', function ($scope, Upload, $timeout) {\r\n    function fileCtrl($scope, Upload, $timeout) {\r\n        var vm = this;\r\n\r\n        // vm.$watch('files', function() {\r\n        //     $scope.upload($scope.files);\r\n        // });\r\n        // vm.$watch('file', function() {\r\n        //     if ($scope.file != null) {\r\n        //         $scope.files = [$scope.file];\r\n        //     }\r\n        // });\r\n\r\n\r\n        vm.upload = function(files) {\r\n            if (files && files.length) {\r\n                for (var i = 0; i < files.length; i++) {\r\n                    var file = files[i];\r\n                    if (!file.$error) {\r\n                        Upload.upload({\r\n                            url: '/file/upload',\r\n                            data: {\r\n                                username: $scope.username,\r\n                                file: file\r\n                            }\r\n                        }).then(function(resp) {\r\n                            $timeout(function() {\r\n                                $scope.log = 'file: ' +\r\n                                    resp.config.data.file.name +\r\n                                    ', Response: ' + JSON.stringify(resp.data) +\r\n                                    '\\n' + $scope.log;\r\n                            });\r\n                        }, null, function(evt) {\r\n                            vm.progress =\r\n                                Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n})();\r\n","// appControllers.controller('ipfsCtrl', ['$scope', '$http',\r\n(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .controller('ipfsCtrl', ipfsCtrl)\r\n        .directive('ngFiles', ['$parse', function($parse) {\r\n\r\n            function fn_link(scope, element, attrs) {\r\n                var onChange = $parse(attrs.ngFiles);\r\n                element.on('change', function(event) {\r\n                    onChange(scope, {\r\n                        $files: event.target.files\r\n                    });\r\n                });\r\n            };\r\n\r\n            return {\r\n                link: fn_link\r\n            }\r\n        }])\r\n\r\n\r\n    ipfsCtrl.$inject = ['$scope', '$http', '$state'];\r\n\r\n    function ipfsCtrl($scope, $http) {\r\n\r\n        var formdata = new FormData();\r\n        $scope.getTheFiles = function($files) {\r\n            angular.forEach($files, function(value, key) {\r\n                formdata.append(key, value);\r\n            });\r\n        };\r\n        $scope.uploadFiles = function() {\r\n            var request = {\r\n                method: 'POST',\r\n                url: 'http://127.0.0.1:5001/api/v0/add',\r\n                data: formdata,\r\n                headers: {\r\n                    'Content-Type': undefined\r\n                }\r\n            };\r\n\r\n            // SEND THE FILES.\r\n            $http(request)\r\n                .success(function(d) {\r\n                    $scope.message = d.Hash;\r\n                    console.log(d);\r\n                })\r\n                .error(function() {\r\n                    console.log('failed');\r\n                });\r\n\r\n        }\r\n\r\n        $scope.viewIPFS = function() {\r\n            var fileHash = $scope.file.hash;\r\n            $scope.ipfsUrl = 'http://127.0.0.1:5001/api/v0/cat?arg=' + fileHash;\r\n            //$scope.ipfsUrl='http://ipfs.io/ipfs/'+fileHash;\r\n        }\r\n    }\r\n})();\r\n\r\n\r\nvar ipfs = window.IpfsApi('localhost', '5001');\r\n","// it is necessary to add params in the state to pass values\r\n(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .controller('listCtrl', listCtrl);\r\n\r\n    listCtrl.$inject = ['$scope', '$http', '$state', 'authentication'];\r\n\r\n    function listCtrl($scope, $http, $state, authentication) {\r\n\r\n        $http.get('/artists/list', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authentication.getToken()\r\n            }\r\n        }).success(function(data) {\r\n            $scope.artists = data;\r\n            $scope.artistOrder = 'reknown';\r\n\r\n        }).error(function(error, status) {\r\n            console.log(error);\r\n            console.log(status);\r\n        });\r\n\r\n    }\r\n})();\r\n","(function() {\r\n    angular\r\n        .module('myApp')\r\n        .controller('loginCtrl', loginCtrl);\r\n\r\n    loginCtrl.$inject = ['$state', 'authentication'];\r\n\r\n    function loginCtrl($state, authentication) {\r\n        var vm = this;\r\n\r\n        vm.credentials = {\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n\r\n        vm.login = function() {\r\n            authentication\r\n                .login(vm.credentials)\r\n                .error(function(err) {\r\n                    $state.message = \"Invalid Login\";\r\n                })\r\n                .then(function() {\r\n                    $state.go('artistList');\r\n                });\r\n        };\r\n\r\n    }\r\n})();\r\n","(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .controller('navigationCtrl', navigationCtrl);\r\n\r\n    navigationCtrl.$inject = ['$location', 'authentication', '$state'];\r\n\r\n    function navigationCtrl($location, authentication, $state) {\r\n        var vm = this;\r\n\r\n        vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n        vm.currentUser = authentication.currentUser();\r\n\r\n        // vm.logout = function() {\r\n        //     authentication\r\n        //         .logout();\r\n        //     $state.go(\"login\");\r\n        //\r\n        // };\r\n\r\n        vm.logout = function() {\r\n            authentication\r\n                .logout();\r\n            // $state.go('logout');\r\n\r\n        };\r\n\r\n        vm.inState = function(state) {\r\n            return $state.is(state);\r\n        }\r\n\r\n    }\r\n\r\n})();\r\n","(function() {\r\n    angular\r\n        .module('myApp')\r\n        .controller('signUpCtrl', signUpCtrl);\r\n\r\n    signUpCtrl.$inject = ['$state', 'authentication'];\r\n\r\n    function signUpCtrl($state, authentication) {\r\n        var vm = this;\r\n        vm.credentials = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\"\r\n        };\r\n        vm.submit = function() {\r\n            authentication\r\n                .register(vm.credentials)\r\n                .error(function(err) {\r\n                    alert(err);\r\n                })\r\n                .then(function() {\r\n                    $state.go('artistList');\r\n                });\r\n        };\r\n\r\n        vm.clear = function() {\r\n            vm.credentials = {\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n})();\r\n","(function() {\r\n\r\n    angular\r\n        .module('myApp')\r\n        .controller('detailsCtrl', detailsCtrl);\r\n\r\n    detailsCtrl.$inject = ['$scope', '$http', '$stateParams', 'authentication'];\r\n\r\n\r\n    function detailsCtrl($scope, $http, $stateParams, authentication) {\r\n        $http.get('/artists/list', {\r\n            headers: {\r\n                Authorization: 'Bearer ' + authentication.getToken()\r\n            }\r\n        }).success(function(data) {\r\n            console.log('Success');\r\n            $scope.artists = data;\r\n            $scope.whichItem = $stateParams.itemId;\r\n            console.log($scope.whichItem);\r\n\r\n            if ($stateParams.itemId > 0) {\r\n                $scope.prevItem = Number($stateParams.itemId) - 1;\r\n            } else {\r\n                $scope.prevItem = $scope.artists.length - 1;\r\n            }\r\n\r\n            if ($stateParams.itemId < $scope.artists.length - 1) {\r\n                $scope.nextItem = Number($stateParams.itemId) + 1;\r\n            } else {\r\n                $scope.nextItem = 0;\r\n            }\r\n        }).error(function(error, status) {\r\n            console.log(error);\r\n            console.log(status);\r\n        });\r\n    }\r\n})();\r\n"]}